diff -Nur anubis-3.4.6.orig/src/auth.c anubis-3.4.6/src/auth.c
--- anubis-3.4.6.orig/src/auth.c	Sun Sep  8 18:35:29 2002
+++ anubis-3.4.6/src/auth.c	Tue Mar  9 16:32:14 2004
@@ -39,6 +39,66 @@
  IDENT protocol support
 ************************/
 
+#define USERNAME_C "USERID :"
+
+/* If the reply matches sscanf expression
+   
+      "%*[^:]: USERID :%*[^:]:%s"
+
+   and the length of "%s" part does not exceed size-1 bytes,
+   copies this part to USERNAME and returns 0. Otherwise,
+   returns 1 */
+
+static int
+ident_extract_username(char *reply, char *username, size_t size)
+{
+	char *p;
+
+	p = strchr (reply, ':');
+	if (!p)
+		return 1;
+	if (p[1] != ' '
+	    || strncmp (p + 2, USERNAME_C, sizeof (USERNAME_C) - 1))
+		return 1;
+	p += 2 + sizeof (USERNAME_C) - 1;
+	p = strchr (p, ':');
+	if (!p)
+		return 1;
+	p++;
+	if (strlen (p) >= size)
+		return 1;
+	strcpy(username, p);
+	return 0;
+}
+
+/* If the reply matches sscanf expression
+
+      "%*[^ ] %*[^ ] %*[^ ] %*[^ ] %*[^ ] %s"
+
+   and the length of "%s" part does not exceed size-1 bytes,
+   copies this part to USERNAME and returns 0. Otherwise,
+   returns 1 */
+
+static int
+crypt_extract_username(char *reply, char *username, size_t size)
+{
+	int i;
+	char *p = reply;
+#define skip_word(c) while (*c && (*c) != ' ') c++
+
+	/* Skip five words */
+	for (i = 0; i < 5; i++) {
+		skip_word(p);
+		if (!*p++)
+			return 1;
+	}
+	
+	if (strlen (p) >= size)
+		return 1;
+	strcpy(username, p);
+	return 0;
+}
+
 int auth_ident(struct sockaddr_in *addr, char *user, int size)
 {
 	struct servent *sp;
@@ -65,11 +125,7 @@
 	info(VERBOSE, "IDENT: connected to %s:%u",
 	inet_ntoa(ident.sin_addr), ntohs(ident.sin_port));
 
-	#ifdef HAVE_SNPRINTF
 	snprintf(buf, LINEBUFFER,
-	#else
-	sprintf(buf,
-	#endif /* HAVE_SNPRINTF */
 	"%u , %u"CRLF, ntohs(addr->sin_port), t_portnumber);
 
 	if (send(sd, buf, strlen(buf), 0) == -1) {
@@ -85,7 +141,8 @@
 	close_socket(sd);
 	memset(user, 0, size);
 
-	if (sscanf(buf, "%*[^:]: USERID :%*[^:]:%s", user) != 1) {
+	remcrlf (buf);
+	if (ident_extract_username(buf, user, size)) {
 		info(VERBOSE, "IDENT: incorrect data.");
 		return -1;
 	}
@@ -101,7 +158,8 @@
 		if (rs == -1)
 			return -1;
 
-		if (sscanf(buf, "%*[^ ] %*[^ ] %*[^ ] %*[^ ] %*[^ ] %s", user) != 1) {
+		remcrlf (buf);
+		if (crypt_extract_username(buf, user, size)) {
 			info(VERBOSE, "IDENT: incorrect data (DES deciphered).");
 			return -1;
 		}
diff -Nur anubis-3.4.6.orig/src/errs.c anubis-3.4.6/src/errs.c
--- anubis-3.4.6.orig/src/errs.c	Sun Sep  8 18:35:39 2002
+++ anubis-3.4.6/src/errs.c	Tue Mar  9 16:32:28 2004
@@ -44,7 +44,7 @@
 	if (output != SILENT) {
 		#ifdef HAVE_SYSLOG
 		if ((topt & T_DAEMON) && !(topt & T_FOREGROUND)) {
-			syslog(LOG_ERR | LOG_MAIL, txt);
+			syslog(LOG_ERR | LOG_MAIL, "%s", txt);
 			filelog(ERRORS, txt);
 		}
 		else
diff -Nur anubis-3.4.6.orig/src/log.c anubis-3.4.6/src/log.c
--- anubis-3.4.6.orig/src/log.c	Sun Sep  8 18:36:21 2002
+++ anubis-3.4.6/src/log.c	Tue Mar  9 16:35:43 2004
@@ -65,7 +65,7 @@
 
 	#ifdef HAVE_SYSLOG
 	if ((topt & T_DAEMON) && !(topt & T_FOREGROUND)) {
-		syslog(LOG_INFO | LOG_MAIL, txt);
+		syslog(LOG_INFO | LOG_MAIL, "%s", txt);
 		filelog(ALL, txt);
 	}
 	else {
diff -Nur anubis-3.4.6.orig/src/ssl.c anubis-3.4.6/src/ssl.c
--- anubis-3.4.6.orig/src/ssl.c	Sun Sep  8 18:36:53 2002
+++ anubis-3.4.6/src/ssl.c	Tue Mar  9 16:35:55 2004
@@ -62,7 +62,7 @@
 	if (output != SILENT) {
 		#ifdef HAVE_SYSLOG
 		if ((topt & T_DAEMON) && !(topt & T_FOREGROUND))
-			syslog(LOG_ERR | LOG_MAIL, string_error);
+			syslog(LOG_ERR | LOG_MAIL, "%s", string_error);
 		else
 		#endif /* HAVE_SYSLOG */
 			mprintf(">>%s", string_error);
